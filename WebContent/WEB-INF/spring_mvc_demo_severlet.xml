<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans">

<!-- Add support for component scanning -->



	
   <!--   <util:properties id="countryOptions" location="classpath:../countries.properties" /> -->
	<!-- Scans the Class path of this application for @Components to deploy as beans -->
	<context:component-scan base-package="com.springs" />
	
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

<!-- Step 1: Define Database DataSource / connection pool -->
<bean id="myDataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://localhost:5432/students" />
        <property name="username" value="atlassian" />
        <property name="password" value="eeeeee22" />

        <!--<property name="socketTimeout" value="10"/>-->
        <property name="connectionProperties">
            <props>
                <prop key="socketTimeout">10</prop>
            </props>
        </property>
</bean>

<!-- Step 2: Setup Hibernate session factory -->
<bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" id="sessionFactory">
<property name="dataSource" ref="myDataSource"/>
<property value="com.springs.model" name="packagesToScan"/>
<property name="hibernateProperties">
<props>
<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop> 
</props>
</property>
</bean>

<!-- Step 3: Setup Hibernate transaction manager -->
<bean class="org.springframework.orm.hibernate5.HibernateTransactionManager" id="myTransactionManager">
<property name="sessionFactory" ref="sessionFactory"/>
</bean>

<!-- Step 4: Enable configuration of transactional behavior based on annotations -->
<tx:annotation-driven transaction-manager="myTransactionManager"/>

	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" cache-period="60000"/>

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
	<bean id="viewResolver" 
	class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
	    <property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order"  value="0"/>
	</bean>


</beans>